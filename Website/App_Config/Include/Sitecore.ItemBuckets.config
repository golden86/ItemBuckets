<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <search>
      <configuration>
        <indexes>
          <index id="buckets" type="Sitecore.Search.Index, Sitecore.Kernel">
            <param desc="name">$(id)</param>
            <param desc="folder">buckets</param>
            <Analyzer ref="search/analyzer" />
            <locations hint="list:AddCrawler">
              <ItemSearch type="Sitecore.Search.Crawlers.DatabaseCrawler,Sitecore.Kernel">
                <Database>master</Database>
                <Root>/sitecore/content/Home</Root>
                <IndexAllFields>true</IndexAllFields>
                <include hint="list:IncludeTemplate">
                  <sample>{76036F5E-CBCE-46D1-AF0A-4143F9B557AA}</sample>
                </include>
              </ItemSearch>
            </locations>
          </index>
        </indexes>
      </configuration>
    </search>
    <events>
      <!--<event name="item:added">
        <handler type="ItemBucket.Kernel.Kernel.Events.AutoBucket, ItemBucket.Kernel" method="Execute"/>
      </event>-->
      <event name="item:copying">
        <handler type="ItemBucket.Kernel.Kernel.Events.ItemCopy, ItemBucket.Kernel" method="Execute"/>
      </event>
      <event name="item:moved">
        <handler type="ItemBucket.Kernel.Kernel.Events.ItemMove, ItemBucket.Kernel" method="Execute"/>
      </event>
      <event name="item:copied:remote"/>
      <event name="item:moved:remote"/>
      <event name="item:templateChanged"/>
    </events>
    <hooks>
      <hook type="ItemBucket.Kernel.Kernel.Hooks.ItemSearchHook, ItemBucket.Kernel">
        <param desc="databases">master</param>
      </hook>
    </hooks>
    <databases>
      <database id="master" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <Engines.DataEngine.Commands.AddFromTemplatePrototype>
          <obj type="ItemBuckets.Kernel.Commands.AddFromTemplateCommand, ItemBucket.Kernel" />
        </Engines.DataEngine.Commands.AddFromTemplatePrototype>
      </database>
    </databases>
    <settings>
      <setting name="ItemSearch.SupportedContainerTemplates" value="{A87A00B1-E6DB-45AB-8B54-636FEC3B5523}" />
      <!--<setting name="ItemSearch.SupportedItemTemplates" value="{76036F5E-CBCE-46D1-AF0A-4143F9B557AA}" />-->
      <setting name="ItemSearch.ContainerTemplateId" value="{ADB6CA4F-03EF-4F47-B9AC-9CE2BA53FF97}" />
      <setting name="ItemSearch.LevelDepth" value="3" />
    </settings>
    <authorization>
      <patch:attribute name="defaultProvider">custom</patch:attribute>
      <providers>
        <clear />
        <add name="custom" type="ItemBucket.Kernel.Kernel.Security.BucketAuthorizationProvider, ItemBucket.Kernel" connectionStringName="core" embedAclInItems="true" />
      </providers>
    </authorization>
    <accessRights>
      <rights>
        <add name="bucket:makebucket" comment="Make Bucket" title="Make Bucket" type="ItemBucket.Kernel.Kernel.Security.BucketAccessRight, ItemBucket.Kernel" maxCommentsFieldName="Max Comments" daysToAllowComments="30" />
        <add name="bucket:unmake" comment="UnMake Bucket" title="UnMake Bucket" type="ItemBucket.Kernel.Kernel.Security.BucketAccessRight, ItemBucket.Kernel" maxCommentsFieldName="Max Comments" daysToAllowComments="30" />
      </rights>
      <rules>
        <add patch:before="*[1]" ancestor="{0DE95AE4-41AB-4D01-9EB0-67441B7C2450}" comment="/sitecore/content" />
      </rules>
    </accessRights>
    <commands>
      <command name="contenteditor:togglebucketitems" type="ItemBucket.Kernel.Kernel.Commands.ToggleBucket,ItemBucket.Kernel"/>
      <command name="item:bucket" type="ItemBucket.Kernel.Kernel.Commands.MakeBucket,ItemBucket.Kernel" />
      <command name="item:unbucket" type="ItemBucket.Kernel.Kernel.Commands.UnMakeBucket,ItemBucket.Kernel" />
      <command name="item:bucketSearch" type="ItemBucket.Kernel.Kernel.Commands.Search,ItemBucket.Kernel"/>
    </commands>
  </sitecore>
</configuration>
<!--
 <events>
      <event name="item:added">
        <handler type="Ninemsn.CMSPilot.Buckets.Events.AutoBucket, ItemSearch" method="Execute"/>
      </event>
      <event name="item:copying">
        <handler type="Ninemsn.CMSPilot.Buckets.Events.ItemCopy, ItemSearch" method="Execute"/>
      </event>
      <event name="item:moved">
        <handler type="Ninemsn.CMSPilot.Buckets.Events.ItemMove, ItemSearch" method="Execute"/>
      </event>
      <event name="item:copied:remote"/>
      <event name="item:moved:remote"/>
      <event name="item:templateChanged"/>
    </events>
    <pipelines>
      <httpRequestBegin>
        <processor patch:after="*[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" type="ItemSearch.Pipelines.HttpRequestBegin.ItemSearchResolver, ItemSearchCore"/>
      </httpRequestBegin>
    </pipelines>
    <hooks>
      <hook type="ItemSearch.Hooks.ItemSearchHook, ItemSearch">
        <param desc="databases">master</param>
      </hook>
    </hooks>
    <databases>
      <database id="master" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <Engines.DataEngine.Commands.AddFromTemplatePrototype>
          <obj type="ItemSearch.DataEngine.AddFromTemplateCommand, ItemSearchCore" />
        </Engines.DataEngine.Commands.AddFromTemplatePrototype>
      </database>
    </databases>
    <linkManager>
      <patch:attribute name="defaultProvider">buckets</patch:attribute>
      <providers>
        <clear />
        <add name="buckets" type="ItemSearch.Providers.ItemSearchLinkProvider, ItemSearchCore" addAspxExtension="false" alwaysIncludeServerUrl="false" encodeNames="true" languageEmbedding="never" languageLocation="filePath" shortenUrls="true" useDisplayName="false" />
      </providers>
    </linkManager>
    <settings>
      <setting name="ItemSearch.SupportedContainerTemplates" value="{A87A00B1-E6DB-45AB-8B54-636FEC3B5523}" />
      <setting name="ItemSearch.SupportedItemTemplates" value="{76036F5E-CBCE-46D1-AF0A-4143F9B557AA}" />
      <setting name="ItemSearch.ContainerTemplateId" value="{A87A00B1-E6DB-45AB-8B54-636FEC3B5523}" />
      <setting name="ItemSearch.LevelDepth" value="3" />
    </settings>
   
    <settings>
      -->
<!--  
        Any item based on the template /sitecore/templates/Common/Folder should  
        be considered to be a comment for the purpose of determining if the max  
        comment count has been met. 
      -->
<!--
      <setting name="CommentTemplate" value="{A87A00B1-E6DB-45AB-8B54-636FEC3B5523}"/>

      -->
<!--  
      Default will be 60 if nothing is sent.
      -->
<!--
      <setting name="BucketTriggerCount" value="60"/>
    </settings>
    <authorization>
      -->
<!-- Set the custom AuthorizationProvider as the default provider -->
<!--
      <patch:attribute name="defaultProvider">custom</patch:attribute>
      <providers>
        <clear />
        <add name="custom" type="ItemSearch.BucketAuthorizationProvider, ItemSearch" connectionStringName="core" embedAclInItems="true" />
      </providers>
    </authorization>
    <accessRights>
      <rights>
        -->
<!-- Add the custom access right -->
<!--
        <add name="bucket:makebucket" comment="Make Bucket" title="Make Bucket" type="ItemSearch.BucketAccessRight, ItemSearch" maxCommentsFieldName="Max Comments" daysToAllowComments="30" />
        <add name="bucket:unmake" comment="UnMake Bucket" title="UnMake Bucket" type="ItemSearch.BucketAccessRight, ItemSearch" maxCommentsFieldName="Max Comments" daysToAllowComments="30" />
      </rights>
      <rules>
        -->
<!--  
          Any access right whose name begins with "commenting" should apply to  
          any child items under /sitecore/content/. //prefix="commenting" patch:before="*[1]"
        -->
<!--
        <add patch:before="*[1]" ancestor="{0DE95AE4-41AB-4D01-9EB0-67441B7C2450}" comment="/sitecore/content" />
      </rules>
    </accessRights>
    <commands>
      <command name="contenteditor:togglebucketitems" type="ItemSearch.ToggleBucket,ItemSearch"/>
    </commands>
    <fieldTypes>
      <fieldType name="BucketList" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
    </fieldTypes>
-->

